<h1>Explanations</h1>
<p>Imagine that you are working on application, consisting of many files, will it be Rails framework or you will choose other ways, - that files are linked, providing submissive and exchanging behaviour to make your stuff work. And now imagine another programming style, where your 6000 files are line-by-line programs calling bunch of functions, independent, 300-400 lines each. Your programs' order depends of data type, same as their syntax, you check whether your files are working by compiling, and somewhere a mistake is hidden. Lets say its a typo. You must find it, then make things working at one file, then submissive files, and then you will see your huge structure ripping off. You might concider its a good way training your brain, or attention, but, wouldn't it be wise to follow smart and beautiful design model, which will lead to safe and effective code organization! 
That is what object-oriented model is about. 
 You will learn how to think object-oriented way, organize your code into classes, define classes' actions in methods and store data at class variables. You will be able to plan and develop class structure from beginning to safely change it later. Object model will allow you to test your classes and methods in order you will exclude bugs. And, finally, you will be able to make changes at your huge application on customer's demand or your ideas, with time, on safe and effective way. </p>